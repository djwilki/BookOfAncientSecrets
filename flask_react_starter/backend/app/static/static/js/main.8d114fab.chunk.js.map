{"version":3,"sources":["CSS_MODULES/create_or_play.module.css","CSS_MODULES/adventure_form.module.css","store/session.js","pages/HomePage.js","components/User.js","components/UsersList.js","pages/CreateOrPlayPage.js","components/ContentTile.js","components/NewTile.js","store/adventures.js","pages/CreateAdventurePage.js","pages/AdventureForm.js","pages/MainContent.js","App.js","store/configureStore.js","store/users.js","index.js"],"names":["module","exports","SET_USER","login","email_or_username","password","csrfToken","Cookies","get","dispatch","a","fetch","method","headers","body","JSON","stringify","res","json","data","console","log","ok","user","type","window","logout","initialSessionState","userId","withRouter","history","useDispatch","handleDemoLogin","e","preventDefault","replace","handleDemoLogout","onClick","User","props","username","email","UsersList","useState","users","setUsers","useEffect","response","responseData","fetchData","userComponents","map","key","id","CreateOrPlayPage","className","styles","outermost_choose_container","choose_path_container","alt","choose_image","src","to","activeclass","ContentTile","tempkey","title","contentId","NewTile","charAt","toUpperCase","slice","SET_ADVENTURES","addAdventure","description","published","ownerId","adventure","setUserAdventures","CreateAdventurePage","useSelector","state","session","adventures","entities","getAdventures","tiles","Object","values","ele","idx","AdventureForm","setTitle","setDescription","checked","setChecked","handleClick","outermost_form_container","onChange","target","value","form_title_text","placeholder","form_description_textarea","form_button","MainContent","path","App","storeEnhancer","getCSRF","combineReducers","action","newState","assign","rootReducer","applyMiddleware","thunk","initialState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,sBAAwB,8CAA8C,aAAe,qCAAqC,2BAA6B,qD,mBCAzKD,EAAOC,QAAU,CAAC,yBAA2B,iDAAiD,gBAAkB,wCAAwC,YAAc,oCAAoC,0BAA4B,oD,iPCChOC,EAAW,mBAkBJC,EAAQ,SAACC,EAAmBC,GACrC,IAAMC,EAAYC,IAAQC,IAAI,cAC9B,8CAAO,WAAMC,GAAN,eAAAC,EAAA,sEACeC,MAAM,qBAAsB,CAC1CC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAeP,GAEnBQ,KAAMC,KAAKC,UAAU,CAAEZ,oBAAmBC,WAAU,WAAcC,MAPnE,cACGW,EADH,gBAScA,EAAIC,OATlB,cASHD,EAAIE,KATD,OAUHC,QAAQC,IAAIJ,EAAIE,MACZF,EAAIK,IACJb,GA5BWc,EA4BMN,EAAIE,KAAKI,KA3B3B,CACHC,KAAMtB,EACNqB,UAaG,kBAcIN,GAdJ,iCAhBY,IAAAM,IAgBZ,OAAP,uDAkBJE,OAAOtB,MAAQA,EAER,IAAMuB,EAAS,WAClB,IAAMpB,EAAYC,IAAQC,IAAI,cAC9B,8CAAO,WAAMC,GAAN,eAAAC,EAAA,sEACeC,MAAM,sBAAuB,CAC3CC,OAAQ,SACRC,QAAS,CACL,cAAeP,KAJpB,cACGW,EADH,OAOHG,QAAQC,IAAIJ,EAAIE,MAPb,SAQcF,EAAIC,OARlB,cAQHD,EAAIE,KARD,OAUCF,EAAIK,IACJb,EAzCD,CACHe,KAZY,wBAyCT,kBAaIP,GAbJ,2CAAP,uDAiBEU,EAAsB,CACxBC,OAAQ,MChBGC,mBAxCf,YAA+B,IAAXC,EAAU,EAAVA,QAQVrB,EAAWsB,cAEXC,EAAe,uCAAG,WAAOC,GAAP,SAAAvB,EAAA,6DACpBuB,EAAEC,iBADkB,SAEFzB,EAASN,EAAM,OAAQ,aAFrB,kBAGZmB,GAHY,uBAIhBQ,EAAQK,QAAQ,KAJA,8DAAH,sDAWfC,EAAgB,uCAAG,WAAOH,GAAP,SAAAvB,EAAA,6DACrBuB,EAAEC,iBADmB,SAEHzB,EAASiB,KAFN,kBAGbJ,GAHa,uBAIjBQ,EAAQK,QAAQ,KAJC,8DAAH,sDAStB,OACI,oCACI,4CACA,4BAAQX,KAAK,SAASa,QAASL,GAA/B,uBACA,4BAAQR,KAAK,SAASa,QAASD,GAA/B,wB,QC5BGE,MATf,SAAcC,GACV,OACI,oCACI,6CADJ,IACgCA,EAAMhB,KAAKiB,SAAS,6BAChD,0CAFJ,IAE6BD,EAAMhB,KAAKkB,MAAM,6BAC1C,+BCkBGC,MAtBf,SAAoBH,GAAQ,IAAD,EACGI,mBAAS,IADZ,mBAChBC,EADgB,KACTC,EADS,KAGvBC,qBAAU,WAAM,4CACZ,8BAAApC,EAAA,sEAC2BC,MAAM,eADjC,cACUoC,EADV,gBAE+BA,EAAS7B,OAFxC,OAEU8B,EAFV,OAGIH,EAASG,EAAaJ,OAH1B,4CADY,uBAAC,WAAD,wBAMZK,KACD,IAEH,IAAMC,EAAiBN,EAAMO,KAAI,SAAC5B,GAAD,OAAU,kBAAC,EAAD,CAAM6B,IAAK7B,EAAK8B,GAAI9B,KAAMA,OAErE,OADAH,QAAQC,IAAI,+BAER,oCACI,2CACC6B,I,iBCOEI,MAvBf,SAA0Bf,GAItB,OACI,oCACI,yBAAKgB,UAAWC,IAAOC,4BACnB,yBAAKF,UAAWC,IAAOE,uBACnB,yBAAKC,IAAI,GAAGJ,UAAWC,IAAOI,aAAcC,IAAI,iFAChD,kBAAC,IAAD,CAASN,UAAU,UAAUO,GAAG,oBAAoBC,YAAY,UAAhE,0BACA,kBAAC,IAAD,CAASR,UAAU,UAAUO,GAAG,oBAAoBC,YAAY,UAAhE,2BAGJ,yBAAKR,UAAWC,IAAOE,uBACnB,yBAAKC,IAAI,GAAGJ,UAAWC,IAAOI,aAAcC,IAAI,yEAChD,kBAAC,IAAD,CAASN,UAAU,UAAUO,GAAG,cAAcC,YAAY,UAA1D,yBACA,kBAAC,IAAD,CAASR,UAAU,UAAUO,GAAG,cAAcC,YAAY,UAA1D,0BCNLC,MAbf,YAAyD,EAAnCC,QAAoC,IAA3BC,EAA0B,EAA1BA,MAE3B,OAFqD,EAAnBC,UAAmB,EAAR3C,KAGzC,oCACI,6BACI,4BAAK0C,GACL,wCACA,6CCODE,MAdf,YAA4B,IAAT5C,EAAQ,EAARA,KAEf,OACI,oCACI,6BACI,mCACA,6BACI,8CAAoBA,EAAK6C,OAAO,GAAGC,cAAgB9C,EAAK+C,MAAM,QCN5EC,EAAiB,gCAkBVC,EAAe,SAACP,EAAOQ,EAAaC,EAAWC,GACxD,IAAMtE,EAAYC,IAAQC,IAAI,cAE9B,8CAAO,WAAMC,GAAN,iBAAAC,EAAA,sEACeC,MAFT,mBAEqB,CAC1BC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAeP,GAEnBQ,KAAMC,KAAKC,UAAU,CAACkD,QAAOQ,cAAaC,YAAWC,UAAS,WAActE,MAP7E,cACGW,EADH,gBASgBA,EAAIC,OATpB,cASGC,EATH,OAUHF,EAAIE,KAAOA,EACPF,EAAIK,IACJb,EArBD,CACHe,KAdiB,6BAejBqD,UAmB6B5D,EAAIE,OAZ9B,kBAcIF,GAdJ,2CAAP,uDAkBS6D,EAAoB,SAAClD,GAE9B,OADAR,QAAQC,IAAI,WACZ,uCAAO,WAAMZ,GAAN,eAAAC,EAAA,sEACeC,MAAM,aAAD,OAAciB,EAAd,gBADpB,cACGX,EADH,gBAGcA,EAAIC,OAHlB,cAGHD,EAAIE,KAHD,OAIHC,QAAQC,IAAIJ,EAAIE,MACZF,EAAIK,IACJb,GA5CeoE,EA4CY5D,EAAIE,KA3ChC,CACHK,KAAMgD,EACNK,eAmCG,kBASI5D,GATJ,iCAtCe,IAAC4D,IAsChB,OAAP,uDCUWE,MAhDf,WACI,IAAMnD,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQtD,UAC5CuD,EAAaH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,SAASD,cACjD1E,EAAWsB,cAEjBe,qBAAU,YACa,uCAAG,sBAAApC,EAAA,sEACZD,EAASqE,EAAkBlD,IADf,2CAAH,qDAGnByD,KAKD,CAAC5E,EAAUmB,IAGdR,QAAQC,IAAI8D,GAEZ,IAAMG,EAAQC,OAAOC,OAAOL,GAAYhC,KAAI,SAACsC,EAAKC,GAC9C,OACI,wBAAItC,IAAKsC,GACT,kBAAC,EAAD,CAAaxB,MAAOuB,EAAIvB,MAAOC,UAAWsB,EAAIpC,GAAI7B,KAAM,kBAMhE,OACI,oCACI,+CACA,4BACA,kBAAC,EAAD,CAAa0C,MAAO,QACnBoB,EACD,kBAAC,EAAD,CAAS9D,KAAK,iB,iBCIXmE,MAvCf,SAAuBpD,GAAQ,IAAD,EAEAI,mBAAS,IAFT,mBAEnBuB,EAFmB,KAEZ0B,EAFY,OAGYjD,mBAAS,IAHrB,mBAGnB+B,EAHmB,KAGNmB,EAHM,OAIIlD,oBAAS,GAJb,mBAInBmD,EAJmB,KAIVC,EAJU,KAKpBnE,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQtD,UAClDR,QAAQC,IAAIO,GACZ,IAAMnB,EAAWsB,cAEXiE,EAAW,uCAAG,WAAO/D,GAAP,eAAAvB,EAAA,6DAChBuB,EAAEC,iBAEEyC,EAAY,EACA,OAAZmB,IACAnB,EAAY,GALA,SAOElE,EAASgE,EAAaP,EAAOQ,EAAaC,EAAW/C,IAPvD,kBASRN,GATQ,qFAAH,sDAcjB,OACI,oCACI,yBAAKiC,UAAWC,IAAOyC,0BACnB,mDACA,6BACA,+CACA,2BAAOC,SAAU,SAACjE,GAAD,OAAK2D,EAAS3D,EAAEkE,OAAOC,QAAQ7C,UAAWC,IAAO6C,gBAAiB7E,KAAK,OAAO8E,YAAY,iBAC3G,2CACA,8BAAUJ,SAAU,SAACjE,GAAD,OAAK4D,EAAe5D,EAAEkE,OAAOC,QAAQ7C,UAAWC,IAAO+C,4BAC3E,6BAAK,2BAAO/E,KAAK,WAAW0E,SAAU,SAACjE,GAAD,OAAK8D,EAAW9D,EAAEkE,OAAOC,UAAS,0CACxE,4BAAQ7C,UAAWC,IAAOgD,YAAanE,QAAS2D,GAAhD,oBCODS,MApCf,SAAqBlE,GAEjB,OACI,oCACI,6BACI,4BACI,4BAAI,kBAAC,IAAD,CAASuB,GAAG,IAAIC,YAAY,UAA5B,SACJ,4BAAI,kBAAC,IAAD,CAASD,GAAG,SAASC,YAAY,UAAjC,UACJ,4BAAI,kBAAC,IAAD,CAASD,GAAG,UAAUC,YAAY,UAAlC,mBACJ,4BAAI,kBAAC,IAAD,CAASD,GAAG,oBAAoBC,YAAY,UAA5C,qBACJ,4BAAI,kBAAC,IAAD,CAASD,GAAG,kBAAkBC,YAAY,UAA1C,qBAGZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO2C,KAAK,UACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,WACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,qBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,mBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,UCTLC,ICnBXC,EDmBWD,EAtBf,WAeI,OAdA7D,qBAAU,YACO,uCAAG,sBAAApC,EAAA,sEACMC,MAAM,qBADZ,kBAGJW,GAHI,qFAAH,qDAQbuF,KACD,IAKC,kBAAC,IAAD,KACI,kBAAC,EAAD,Q,wBCZZ,IAAMzB,EAAW0B,YAAgB,CAC7BlE,MCmDW,WAA2C,IAArBqC,EAAoB,uDAAZ,GAAI8B,EAAQ,uCACrD,OAAQA,EAAOvF,MACX,IA/DmB,qBAgEf,OAAOuF,EAAOxF,KAClB,IAhEY,sBAiER,MAAO,GACX,IAjES,iBAkEL,OAAO,eAAGwF,EAAOxF,KAAK8B,GAAK0D,EAAOxF,MACtC,QACI,OAAO0D,ID3DfE,WL8CW,WAAgD,IAArBF,EAAoB,uDAAZ,GAAI8B,EAAQ,uCACpDC,EAAWzB,OAAO0B,OAAO,GAAIhC,GACnC,OAAO8B,EAAOvF,MACV,IA3DiB,6BA4Db,OAAOwF,EAASD,EAAOlC,UAAUxB,IAAO0D,EAAOlC,UACnD,KAAKL,EACD,OAAOwC,EAAS7B,WAAY4B,EAAOlC,UACvC,QACI,OAAOI,MKnDbiC,EAAcJ,YAAgB,CAChC5B,QZsDW,WAA8D,IAAtCD,EAAqC,uDAA7BtD,EAAqBoF,EAAQ,uCAClEC,EAAWzB,OAAO0B,OAAO,GAAIhC,GACnC,OAAQ8B,EAAOvF,MACX,KAAKtB,EAED,OADA8G,EAASpF,OAASmF,EAAOxF,KAAKK,OACvBoF,EACX,IAzEY,sBA0ER,MAAO,GACX,QACI,OAAO/B,IY9DfG,aAQAwB,EAAgBO,YAAgBC,KElB7B,IFsBgCC,EEtB1BC,EFuBFC,YACHL,EACAG,EACAT,GEnBRY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUJ,MAAOA,GACjB,kBAAC,EAAD,QAGFK,SAASC,eAAe,W","file":"static/js/main.8d114fab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"choose_path_container\":\"create_or_play_choose_path_container__1Ojfz\",\"choose_image\":\"create_or_play_choose_image__3O5AB\",\"outermost_choose_container\":\"create_or_play_outermost_choose_container__1qVB3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outermost_form_container\":\"adventure_form_outermost_form_container__tpxbw\",\"form_title_text\":\"adventure_form_form_title_text__3s3bb\",\"form_button\":\"adventure_form_form_button__yTWSA\",\"form_description_textarea\":\"adventure_form_form_description_textarea__3eWuJ\"};","import Cookies from 'js-cookie';\n\nconst SET_USER = 'session/SET_USER';\nconst LOGOUT_USER = 'session/LOGOUT_USER';\n\n\nexport const setUser = user => {\n    return {\n        type: SET_USER,\n        user\n    }\n};\n\nexport const logoutUser = () => {\n    return {\n        type: LOGOUT_USER\n    }\n}\n\n\nexport const login = (email_or_username, password) => {\n    const csrfToken = Cookies.get('XSRF-TOKEN');\n    return async dispatch => {\n        const res = await fetch('/api/session/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFTOKEN': csrfToken\n            },\n            body: JSON.stringify({ email_or_username, password, \"csrf_token\": csrfToken })\n        });\n        res.data = await res.json();\n        console.log(res.data)\n        if (res.ok) {\n            dispatch(setUser(res.data.user));\n        }\n        return res\n    }\n};\n\nwindow.login = login;\n\nexport const logout = () => {\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n    return async dispatch => {\n        const res = await fetch('/api/session/logout', {\n            method: \"DELETE\",\n            headers: {\n                \"X-CSRFTOKEN\": csrfToken\n            }\n        })\n        console.log(res.data)\n        res.data = await res.json();\n\n        if (res.ok) {\n            dispatch(logoutUser());\n        }\n        return res;\n    }\n}\n\nconst initialSessionState = {\n    userId: null,\n    // selectedNotebookId: null,\n    // defaultNotebookId: null,\n    // noteList: null,\n    // activeNote: null\n}\n\n\nexport default function sessionReducer(state = initialSessionState, action) {\n    const newState = Object.assign({}, state);\n    switch (action.type) {\n        case SET_USER:\n            newState.userId = action.user.userId;\n            return newState;\n        case LOGOUT_USER:\n            return {};\n        default:\n            return state;\n    }\n};\n","import React from 'react'\nimport {useDispatch} from 'react-redux'\nimport { login, logout } from '../store/session'\nimport { withRouter } from 'react-router-dom';\n\n\nfunction HomePage( {history}) {\n    // const [errors, setErrors] = useState([]);\n\n    // useEffect(() => {\n    //     setErrors([]);\n    // }, [emailOrUsername, password]);\n\n\n    const dispatch = useDispatch()\n\n    const handleDemoLogin = async (e) => {\n        e.preventDefault();\n        const res = await dispatch(login(\"Owen\", \"password\"))\n        if (res.ok) {\n            history.replace('/');\n            return;\n        }\n\n        // setErrors(res.data.errors);\n    }\n\n    const handleDemoLogout = async (e) => {\n        e.preventDefault();\n        const res = await dispatch(logout())\n        if (res.ok) {\n            history.replace('/');\n            return;\n        }\n    }\n\n    return (\n        <>\n            <h1>My Home Page</h1>\n            <button type=\"button\" onClick={handleDemoLogin}>Log in as Demo User</button>\n            <button type=\"button\" onClick={handleDemoLogout}>Logout Demo User</button>\n        </>\n    )\n}\n\n\nexport default withRouter(HomePage)\n","import React from 'react';\n\n\nfunction User(props) {\n    return (\n        <>\n            <strong>Username:</strong> {props.user.username}<br />\n            <strong>Email:</strong> {props.user.email}<br />\n            <hr />\n        </>\n    );\n}\nexport default User;","import React, { useEffect, useState } from 'react';\n\nimport User from './User';\n\nfunction UsersList (props) {\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch('/api/users/');\n            const responseData = await response.json();\n            setUsers(responseData.users);\n        }\n        fetchData();\n    }, []);\n\n    const userComponents = users.map((user) => <User key={user.id} user={user} />)\n    console.log(\"____Rendering User List____\")\n    return (\n        <>\n            <h1>User List: </h1>\n            {userComponents}\n        </>\n        );\n}\n\nexport default UsersList;","import React from 'react'\nimport styles from '../CSS_MODULES/create_or_play.module.css'\nimport { NavLink } from 'react-router-dom';\n\n\nfunction CreateOrPlayPage(props) {\n\n\n\n    return (\n        <>\n            <div className={styles.outermost_choose_container}>\n                <div className={styles.choose_path_container}>\n                    <img alt=\"\" className={styles.choose_image} src=\"https://i.pinimg.com/originals/18/fc/90/18fc90e504fe07c87f25af84c44e144d.jpg\" />\n                    <NavLink className=\"Navlink\" to=\"/create-adventure\" activeclass=\"active\">Expand Your Adventures</NavLink>\n                    <NavLink className=\"Navlink\" to=\"/create-character\" activeclass=\"active\">Create Your Characters</NavLink>\n\n                </div>\n                <div className={styles.choose_path_container}>\n                    <img alt=\"\" className={styles.choose_image} src=\"https://immarpalomera.files.wordpress.com/2010/12/dungeon-delve1.jpg\" />\n                    <NavLink className=\"Navlink\" to=\"/characters\" activeclass=\"active\">Select Your Character</NavLink>\n                    <NavLink className=\"Navlink\" to=\"/adventures\" activeclass=\"active\">Start an Adventure</NavLink>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default CreateOrPlayPage\n","import React from 'react'\n\nfunction ContentTile({tempkey, title, contentId, type }) {\n\n    return (\n        <>\n            <div>\n                <h1>{title}</h1>\n                <button>Edit</button>\n                <button>Delete</button>\n            </div>\n        </>\n    )\n}\n\nexport default ContentTile\n","import React from 'react'\n\nfunction NewTile({ type }) {\n\n    return (\n        <>\n            <div>\n                <h1>New</h1>\n                <div>\n                    <button>Create New {type.charAt(0).toUpperCase() + type.slice(1)}</button>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default NewTile\n","import Cookies from 'js-cookie';\n\nconst CREATE_ADVENTURE = \"adventure/CREATE_ADVENTURE\"\nconst SET_ADVENTURES = 'adventure/SET_USER_ADVENTURES'\n\n\nconst getUserAdventures = (adventure) => {\n    return {\n        type: SET_ADVENTURES,\n        adventure\n    }\n}\n\n\nconst createAdventure = (adventure) => {\n    return {\n        type: CREATE_ADVENTURE,\n        adventure\n    }\n}\n\nexport const addAdventure = (title, description, published, ownerId) => {\n    const csrfToken = Cookies.get('XSRF-TOKEN');\n    const path = '/api/adventures/';\n    return async dispatch => {\n        const res = await fetch(path, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFTOKEN': csrfToken\n            },\n            body: JSON.stringify({title, description, published, ownerId, \"csrf_token\": csrfToken})\n        });\n        const data = await res.json();\n        res.data = data;\n        if (res.ok) {\n            dispatch(createAdventure(res.data));\n        }\n        return res;\n    }\n}\n\nexport const setUserAdventures = (userId) => {\n    console.log(\"setting\")\n    return async dispatch => {\n        const res = await fetch(`api/users/${userId}/adventures`);\n\n        res.data = await res.json();\n        console.log(res.data)\n        if (res.ok) {\n            dispatch(getUserAdventures(res.data));\n        }\n\n        return res;\n    }\n}\n\n\nexport default function adventuresReducer(state = {}, action) {\n    const newState = Object.assign({}, state);\n    switch(action.type) {\n        case CREATE_ADVENTURE:\n            return newState[action.adventure.id] =  action.adventure;\n        case SET_ADVENTURES:\n            return newState.adventures= action.adventure;\n        default:\n            return state;\n    }\n}\n","import React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport ContentTile from '../components/ContentTile'\nimport NewTile from '../components/NewTile'\nimport { setUserAdventures } from '../store/adventures'\n\nfunction CreateAdventurePage() {\n    const userId = useSelector(state => state.session.userId)\n    const adventures = useSelector(state => state.entities.adventures)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const getAdventures = async () => {\n            await dispatch(setUserAdventures(userId));\n        }\n        getAdventures()\n\n\n\n\n    }, [dispatch, userId])\n\n\n    console.log(adventures)\n\n    const tiles = Object.values(adventures).map((ele, idx) => {\n        return (\n            <li key={idx}>\n            <ContentTile title={ele.title} contentId={ele.id} type={\"adventure\"} />\n            </li>\n        )\n    })\n\n\n    return (\n        <>\n            <h1>Your Adventures</h1>\n            <ul>\n            <ContentTile title={\"bob\"} />\n            {tiles}\n            <NewTile type=\"adventure\" />\n            </ul>\n        </>\n    )\n}\n\n// const mapStateToProps = (state, ownProps) => {\n//     return {\n//         userId: state.session.user_id,\n//         adventures: state.entities.adventures,\n//     }\n// };\n\n// export default connect(mapStateToProps)(CreateAdventurePage);\nexport default CreateAdventurePage;\n","import React, {useState} from 'react'\nimport styles from '../CSS_MODULES/adventure_form.module.css'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {addAdventure} from '../store/adventures'\n\nfunction AdventureForm(props) {\n\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [checked, setChecked] = useState(false);\n    const userId = useSelector(state => state.session.userId)\n    console.log(userId)\n    const dispatch = useDispatch()\n\n    const handleClick = async (e) => {\n        e.preventDefault()\n\n        let published = 0\n        if (checked === 'on') {\n            published = 1;\n        }\n        const res = await dispatch(addAdventure(title, description, published, userId));\n\n        if (res.ok) {\n            return;\n        }\n    }\n\n    return (\n        <>\n            <div className={styles.outermost_form_container}>\n                <h1>Create an Adventure</h1>\n                <hr></hr>\n                <h3>Adventure Title</h3>\n                <input onChange={(e)=>setTitle(e.target.value)} className={styles.form_title_text} type=\"text\" placeholder=\"Enter a name\" />\n                <h3>Description</h3>\n                <textarea onChange={(e)=>setDescription(e.target.value)} className={styles.form_description_textarea}/>\n                <div><input type=\"checkbox\" onChange={(e)=>setChecked(e.target.value)}/><span>Publish</span></div>\n                <button className={styles.form_button} onClick={handleClick}>Add Adventure</button>\n            </div>\n        </>\n    )\n}\n\nexport default AdventureForm\n","import React from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport HomePage from '../pages/HomePage'\nimport UserList from '../components/UsersList';\nimport CreateOrPlayPage from './CreateOrPlayPage';\nimport CreateAdventurePage from './CreateAdventurePage';\nimport AdventureForm from './AdventureForm';\n\n\nfunction MainContent(props) {\n\n    return (\n        <>\n            <nav>\n                <ul>\n                    <li><NavLink to=\"/\" activeclass=\"active\">Home</NavLink></li>\n                    <li><NavLink to=\"/users\" activeclass=\"active\">Users</NavLink></li>\n                    <li><NavLink to=\"/choose\" activeclass=\"active\">Create or Play</NavLink></li>\n                    <li><NavLink to=\"/create-adventure\" activeclass=\"active\">Create Adventure</NavLink></li>\n                    <li><NavLink to=\"/adventure-form\" activeclass=\"active\">Adventure Form</NavLink></li>\n                </ul>\n            </nav>\n            <Switch>\n                <Route path=\"/users\">\n                    <UserList />\n                </Route>\n                <Route path=\"/choose\">\n                    <CreateOrPlayPage />\n                </Route>\n                <Route path=\"/create-adventure\">\n                    <CreateAdventurePage />\n                </Route>\n                <Route path=\"/adventure-form\">\n                    <AdventureForm />\n                </Route>\n                <Route path=\"/\">\n                    <HomePage />\n                </Route>\n            </Switch>\n        </>\n    )\n}\n\n\n\nexport default MainContent;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport MainContent from './pages/MainContent'\n\n\nfunction App() {\n    useEffect(() => {\n        const getCSRF = async () => {\n            const res = await fetch('/api/session/csrf');\n\n            if (res.ok) {\n                return;\n            }\n        }\n\n        getCSRF();\n    }, []);\n\n\n\n    return (\n        <BrowserRouter>\n            <MainContent />\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","\nimport { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport session from './session';\nimport users from './users';\nimport adventures from './adventures'\n// import ui from './ui';\n\nlet storeEnhancer;\n\nconst entities = combineReducers({\n    users,\n    adventures,\n});\n\nconst rootReducer = combineReducers({\n    session,\n    entities,\n    // ui\n});\n\nif (process.env.NODE_ENV !== 'production') {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    storeEnhancer = composeEnhancers(applyMiddleware(thunk));\n} else {\n    storeEnhancer = applyMiddleware(thunk);\n}\n\n\nexport default function configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        storeEnhancer\n    )\n}\n","import Cookies from 'js-cookie'\nexport const CREATE_USER = \"signup/CREATE_USER\";\nconst LOGOUT_USER = 'session/LOGOUT_USER';\nconst SET_USER = 'users/SET_USER';\n\n\nconst setUser = (user) => {\n    return {\n        type: SET_USER,\n        user\n    }\n}\n\nconst createUser = (user) => {\n    return {\n        type: CREATE_USER,\n        user\n    };\n};\n\n\n\nexport const signup = (username, email, password) => {\n    const csrfToken = Cookies.get('XSRF-TOKEN');\n    return async dispatch => {\n        const res = await fetch('/api/users/', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFTOKEN': csrfToken\n            },\n            body: JSON.stringify({ username, password, email, \"csrf_token\": csrfToken })\n        });\n        const data = await res.json();\n        res.data = data;\n        if (res.ok) {\n            dispatch(createUser(data));\n            return res;\n        } else {\n            console.error('Bad response');\n            return res;\n        }\n    }\n};\n\n\n\nexport const setUserInfo = (userId) => {\n    return async dispatch => {\n        const res = await fetch(`api/users/${userId}`);\n\n        res.data = await res.json();\n\n        if (res.ok) {\n            dispatch(setUser(res.data));\n        }\n\n        return res;\n    }\n}\n\n\nexport default function usersReducer(state = {}, action) {\n    switch (action.type) {\n        case CREATE_USER:\n            return action.user;\n        case LOGOUT_USER:\n            return {};\n        case SET_USER:\n            return { [action.user.id]: action.user };\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport configureStore from './store/configureStore';\n\nexport const store = configureStore();\n\nif (process.env.NODE_ENV !== 'production') {\n  window.store = store;\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}